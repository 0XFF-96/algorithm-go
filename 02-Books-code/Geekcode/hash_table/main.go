package hash_table

// 散列表: 装填因子、动态扩容、解决散列冲突的方法
//1.为什么散列表和链表经常放在一起使用?
//2.散列表和链表如何组合起来使用?
//一、为什么散列表和链表经常放在一起使用?
//1.散列表的优点:支持高效的数据插入、删除和查找操作 、
//2.散列表的缺点:不支持快速顺序遍历散列表中的数据
//3.如何按照顺序快速遍历散列表的数据?只能将数据转移到数组，然后排序，最后再遍历数据。
//4.我们知道散列表是动态的数据结构，需要频繁的插入和删除数据，那么每次顺序遍历之前都需要先排序 ，这势必会造成效率非常低下。
//5.如何解决上面的问题呢?就是将散列表和链表(或跳表)结合起来使用。
// 哈希算法的用途
// 一致性哈希算法

